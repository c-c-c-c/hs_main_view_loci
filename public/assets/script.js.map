{"version":3,"sources":["../../src/script/script.js"],"names":["vm","Vue","el","data","count","methods","countUp","changeRotateSpeed","vm_stop","hsStop","Speed_0","howManySpinners","scene","THREE","Scene","box","controls","renderer","camera","scene_bg","camera_bg","model","model2","model3","rotate_speed","r_radian","c_radian","geometry","material","WIDTH","HEIGHT","renderHandSpinner","light","ambient","gridHelper","axisHelper","lightHelp","modelPath","scale_hs","DirectionalLight","position","set","add","AmbientLight","PerspectiveCamera","lookAt","OrbitControls","autoRotate","autoRotateSpeed","WebGLRenderer","antialias","preserveDrawingBuffer","setSize","setClearColor","autoClearColor","setPixelRatio","window","devicePixelRatio","document","getElementById","appendChild","domElement","modelPath1","modelPath2","modelPath3","loader","JSONLoader","j","setTimeout","console","log","load","geo","mat","i","hsMat","MeshPhongMaterial","MeshBasicMaterial","wireframe","hsIndex","Mesh","randX","Math","random","randY","randZ","randColor","scale","color","Color","opacity","transparent","rotate","OrthographicCamera","bg_geometry","PlaneGeometry","bg_material","bg","x","y","render","requestAnimationFrame","length","rotation","sin","cameraZ","update"],"mappings":"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","file":"script.js","sourcesContent":["\nvar vm = new Vue({\n  el: '#mycounter',\n  data: {\n    count: 0\n  },\n  methods: {\n    countUp: function() {\n            this.count++;\n            changeRotateSpeed ();\n      }\n  }\n});\n\nvar vm_stop = new Vue({\n  el: '#mystop',\n  methods: {\n    hsStop: function() {\n            Speed_0();\n    }\n  }\n});\n\nlet howManySpinners = 30;\nlet scene = new THREE.Scene();\nlet box;\nlet controls;\nlet renderer;\nlet camera;\nlet scene_bg;\nlet camera_bg;\n\nlet model = [];\n//let model = {};\nlet model2 = {};\nlet model3 = {};\nlet rotate_speed = 0.05;\nlet r_radian = 0;\nlet c_radian = 0;\nlet geometry;\nlet material;\nlet WIDTH = 1400;\nlet HEIGHT = 500;\n\n\nfunction renderHandSpinner () {\n  'use strict';\n  let light;\n  let ambient;\n  let gridHelper;\n\tlet axisHelper;\n  let lightHelp;\n\tlet modelPath ;\n\tlet scale_hs;\n\n   //light\n  light = new THREE.DirectionalLight(0xffffff, 1);\n  light.position.set(0, 200, 80);\n  scene.add(light);\n  ambient = new THREE.AmbientLight(0x404040);\n  scene.add(ambient);\n\n\t//camera\n  camera = new THREE.PerspectiveCamera(30, WIDTH /　HEIGHT, 1 , 1600);\n  camera.position.set(0, 200, 120);\n  camera.lookAt(scene.position);\n\n  // helper 現在は非表示\n  //gridHelper = new THREE.GridHelper(200, 50);\n  //scene.add(gridHelper);\n   // axisHelper = new THREE.AxisHelper(1000);\n   // scene.add(axisHelper);\n  //lightHelper = new THREE.DirectionalLightHelper(light , 20)\n  //scene.add(lightHelper);\n\n  //controls\n  controls = new THREE.OrbitControls(camera);\n  //cameraの自動回転\n  controls.autoRotate = true;\n  controls.autoRotateSpeed = 1.5;\n\n  // renderer\n  renderer = new THREE.WebGLRenderer({ antialias: true , preserveDrawingBuffer : true});\n  renderer.setSize(WIDTH, HEIGHT);\n  renderer.setClearColor(0xffffff);\n\trenderer.autoClearColor = false\n  renderer.setPixelRatio(window.devicePixelRatio);\n  document.getElementById('stage').appendChild(renderer.domElement);\n\n\t//modelPath = 'src/bear.json';\n\t//modelPath = 'src/handspiner_3d.json';\n  //modelPath = '../src/data/handspiner_3d_geo.json';\n  let modelPath1 = '../src/data/handspiner_3d_geo.json';\n  let modelPath2 = '../src/data/hs3.json';\n  //modelPath = './src/data/hs4.json';\n  //modelPath = './src/data/hs5.json';\n  let modelPath3 = '../src/data/hs300k.json';\n\n\t　　　\n\t    //let phongMat = new THREE.MeshPhongMaterial(mat);\n\t    //let phongMat2 = new THREE.MeshPhongMaterial(mat);\n\t    //let phongMat3 = new THREE.MeshPhongMaterial(mat);\n\t    //for (let mt of faceMat.materials) {\n\t    //  mt.color = new THREE.Color(0xffcc88);\n\t  \t//}\n\n\n\n\n\tlet loader = new THREE.JSONLoader();　　\n\n\t\t for (let j = 0; j < 3; j++) {\n\n\n\t\t\t setTimeout(()=> {\n\t\t\t//modelPath = modelPath2;\n\t\t\t//scale_hs = 30;\n\t\t\t\tif (j % 3 == 0 ) {\n\t\t\t\t\t modelPath = modelPath1;\n\t\t\t\t\t scale_hs = 0.0002;\n\t\t\t\t\t console.log(\"hoge1\");\n\n\t\t\t\t} else if ( j % 3 == 1) {\n\t\t\t\t\t modelPath = modelPath2;\n\t\t\t\t\t scale_hs = 30;\n\t\t\t\t\t console.log(\"hoge2\");\n\t\t\t\t} else {\n\t\t\t\t\t modelPath = modelPath3;\n\t\t\t\t\t scale_hs = 5;\n\t\t\t\t\t console.log(\"hoge3\");\n\t\t\t\t}\n\n\n\t\t\t\tloader.load(modelPath, (geo, mat) => {\n\t\t\t\t\tgeometry = geo;\n\t\t\t\t\tmaterial = mat;\n\n\t\t\t\t\tif (j % 3 == 0 ) {\n\t\t\t\t\t\t scale_hs = 0.4;\n\n\t\t\t\t\t} else if ( j % 3 == 1) {\n\t\t\t\t\t\t scale_hs = 40;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t scale_hs = 20;\n\t\t\t\t\t}\n\n\n\n\t\t\t\t\tfor (let i=0; i < howManySpinners; i++ ) {\n\t\t\t\t\t\tlet hsMat;\n\t\t\t\t\t\tif (i % 4 == 0 ) {\n\n\t\t\t\t    \thsMat = new THREE.MeshPhongMaterial(mat);\n\t\t\t\t\t\t} else {\n\t\t\t\t    \thsMat = new THREE.MeshBasicMaterial(mat);\n\t\t\t\t\t\t\thsMat.wireframe = true;\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\tlet hsIndex = i + j * howManySpinners;\n\t\t\t\t\t\tconsole.log(hsIndex);\n\t\t\t\t    model[hsIndex] = new THREE.Mesh(geo, hsMat);\n\n\t\t\t\t\t\tlet randX = 1800 * Math.random() - 900;\n\t\t\t\t\t\tlet randY = 1000 * Math.random() - 600;\n\t\t\t\t\t\tlet randZ = 200 * Math.random() - 100 ;\n\n\n\t\t\t\t\t\tmodel[hsIndex].position.set(randX, randY, randZ);\n\t\t\t\t\t\t　　\n\n\t\t\t\t    // let randColor =  256 * Math.floor(Math.random() * 156) + 255 + 25600;\n\t\t\t\t    // if (i % 2 == 0 ) {\n\t\t\t\t\t\t// \trandColor =  256 * Math.floor(Math.random() * 156) + 200 + 25600;\n\t\t\t\t\t\t// }\n\t\t\t\t\t\tlet randColor;\n\t\t\t\t\t\tif (i % 4 == 0 ) {\n\t\t\t\t\t\t\trandColor =  0x707070;\n\t\t\t\t\t\t} else if(i%4==1) {\n\t\t\t\t\t\t\trandColor = 0xcccccc;\n\t\t\t\t\t\t} else if(i % 4==2) {\n\t\t\t\t\t\t\trandColor = 0xaaaaaa;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\trandColor = 0x888888;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t//model[i].scale.set(scale, scale, scale);\n\t\t\t\t\t\tmodel[hsIndex].scale.set(scale_hs, scale_hs, scale_hs);\n\t\t\t\t\t\tmodel[hsIndex].material.color = new THREE.Color(randColor);\n\t\t\t\t\t\tmodel[hsIndex].material.opacity = Math.random();\n\t\t\t\t\t\tmodel[hsIndex].material.transparent = true;\n\t\t\t\t\t\tmodel[hsIndex].rotate = (i%7 == 0) ? 0.6+Math.random()*0.2 : Math.random()*0.1 +0.03;\n\t\t\t\t\t\tscene.add(model[hsIndex]);　　　\n\t\t\t\t\t}\n\n\t\t\t\t});\n\t\t\t}, 2000);\n\n\t\t\t}\n\n\t\t\t///残像処理\n\t\t\t//背景の定義\n\t\t\tscene_bg = new THREE.Scene();\n\t\t\tcamera_bg = new THREE.OrthographicCamera(0, WIDTH, HEIGHT, 0, 0, 1000)\n\t\t\tlet bg_geometry = new THREE.PlaneGeometry(WIDTH, HEIGHT, 10, 10);\n\t\t\tlet bg_material = new THREE.MeshBasicMaterial({\n\t\t\t\tcolor: 0xFFFFFF,\n\t\t\t\ttransparent: true,\n\t\t\t\topacity: 0.25,\n\t\t\t});\n\n\n\t\t\tlet bg = new THREE.Mesh(bg_geometry, bg_material);\n\t\t\tbg.position.x = WIDTH/2;\n\t\t\tbg.position.y = HEIGHT/2;\n\t\t\tscene_bg.add(bg);\n\n\t\t\trender ();\n\t}\n\n\n// function addSpinner () {\n//   let phongMat = new THREE.MeshPhongMaterial(material);\n//   model = new THREE.Mesh(geometry, phongMat);\n// \tlet randX = 800 * Math.random();\n// \tlet randY = 800 * Math.random();\n// \tlet randZ = 800 * Math.random();\n//\n//   let size = Math.random();\n// \tmodel.scale.set(size, size, size);　　　\n//   model.position.set(randX, randY, randZ);\n// \tlet randColor = Math.random() * 0xffffff;　　　\n// \tmodel.material.color = new THREE.Color(randColor);\n// \tscene.add(model);　\n// }\n\nfunction render () {\n\n  requestAnimationFrame(render);\n  r_radian += 0.01;\n\tconsole.log (model.length);\n\n\tfor (let i=0; i < model.length - 1  ; i++ ) {\n  \tmodel[i].rotation.y += model[i].rotate;\n    model[i].position.y += (Math.sin(r_radian) - Math.sin(r_radian-0.01))*150 ;\n\n\t}\n\n\tc_radian += 0.007;\n  let cameraZ = 150 * (Math.sin(c_radian)) +150;\n // let cameraZ = 0;\n\tcamera.position.set(0, 600, cameraZ);\n\n  controls.update();\n  renderer.render(scene, camera);\n  renderer.render(scene_bg, camera_bg);\n}\n\nfunction changeRotateSpeed () {\n  //controls.autoRotateSpeed = vm.count*10;\n \trotate_speed += vm.count*0.01;\n  for (let i=0 ; i < howManySpinners; i++) {\n\n\t\tmodel[i].rotation.y = 1.8*vm.count;\n  }\n}\n\nfunction Speed_0 () {\n  vm.count = 0;\n  rotate_speed = 0;\n \t//addSpinner();\n}\n\nrenderHandSpinner();\n"]}